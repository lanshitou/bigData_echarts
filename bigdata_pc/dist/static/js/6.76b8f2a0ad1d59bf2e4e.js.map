{"version":3,"sources":["webpack:///src/view/user/index.vue","webpack:///./src/view/user/index.vue?f173","webpack:///./src/view/user/index.vue"],"names":["user","id","this","_chart","xAxis","data","edata","reverse","_this","Date","d1","d2","_this2","_this3","_this4","getFullYear","m","getDate","d","_this5","_this6","count","monthCount","content","view_user","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","gutter","span","staticStyle","height","slot","_v","font-size","_s","regionAll","placement","type","size","regionNum","userAll","addUserNum","activityAll","activityUserNum","bigUserAll","addBigUserNum","background-color","margin-top","justify","on","click","month","quarter","todayYear","lastYear","width","placeholder","editable","on-change","timeChange","model","value","callback","$$v","time","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/6.76b8f2a0ad1d59bf2e4e.js","sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <Row :gutter=\"32\">\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>总注册用户数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{regionAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台注册所有用户数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>今日注册 &nbsp;&nbsp;&nbsp;{{regionNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>签约用户数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{userAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台所有签约用户数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月新增签约用户 &nbsp;&nbsp;&nbsp;{{addUserNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>活跃用户数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{activityAll}}</span>\r\n          </p>\r\n        <Tooltip content=\"平台所有活跃用户数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>今日活跃 &nbsp;&nbsp;&nbsp;{{activityUserNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>农业大户数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{bigUserAll}}</span></p>\r\n        <Tooltip content=\"平台所有农业大户数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月新增 &nbsp;&nbsp;&nbsp;{{addBigUserNum}}</p>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n    <div style=\"background-color: #404a59\">\r\n      <!--地图=================================================================================================-->\r\n      <Row style=\"margin-top: 20px;\" type=\"flex\" justify=\"center\">\r\n        <Col span=\"24\" >\r\n        <div id=\"map\" style=\"height:800px;\" ></div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    <Row :gutter=\"32\" style=\"margin-top: 20px\">\r\n      <!--柱状图=================================================================================================-->\r\n      <Col span=\"12\" >\r\n      <Card>\r\n        <p slot=\"title\">注册用户种植作物总产量排行榜</p>\r\n        <p><div id=\"plant\" style=\"height:400px;\"></div></p>\r\n      </Card>\r\n      </Col>\r\n      <!--折线图=================================================================================================-->\r\n      <Col span=\"12\" >\r\n      <Card>\r\n        <p slot=\"title\">平台活跃用户走势图（近6个月）</p>\r\n        <p><div id=\"activity\" style=\"height:400px;\"></div></p>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n    <!--用户总体折线图=================================================================================================-->\r\n    <Row style=\"margin-top: 20px;\" type=\"flex\" justify=\"center\">\r\n      <Col span=\"24\" >\r\n      <Card>\r\n        <p slot=\"title\">用户总数统计及分析</p>\r\n        <div  slot=\"extra\">\r\n          <Button type=\"text\" @click=\"month\">近一个月</Button>\r\n          <Button type=\"text\" @click=\"quarter\">近三个月</Button>\r\n          <Button type=\"text\" @click=\"todayYear\">今年</Button>\r\n          <Button type=\"text\" @click=\"lastYear\">去年</Button>\r\n          <DatePicker v-model=\"time\" type=\"daterange\" placement=\"bottom-end\" placeholder=\"选择日期\" style=\"width: 200px\" :editable=\"false\" @on-change=\"timeChange\" ></DatePicker>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"12\">\r\n            <div id=\"userAll\" style=\"height:400px;\"></div>\r\n          </Col>\r\n          <Col span=\"12\">\r\n            <div id=\"order\" style=\"height:400px;\"></div>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { FormateGroupData } from '../../framework/utils'\r\nimport echarts from 'echarts'\r\nimport china from 'echarts/map/js/china'\r\nimport { getUserCart, getUsermap, getUserActitity, getUserPlant, getUserArea, getUserAll } from '../../api/api'\r\nexport default {\r\n  data () {\r\n    return {\r\n      para: {\r\n        beginTime: '',\r\n        endTime: ''\r\n      },\r\n      time: '',\r\n      chart: {},\r\n      regionAll: '',\r\n      userAll: '',\r\n      activityAll: '',\r\n      bigUserAll: '',\r\n      regionNum: '300',\r\n      addUserNum: '20',\r\n      activityUserNum: '90',\r\n      addBigUserNum: '40'\r\n    }\r\n  },\r\n  methods: {\r\n    drawBar (id, edata) {\r\n      let vm = this\r\n      if (document.getElementById(id) === null) {\r\n        return false\r\n      }\r\n      let _chart = {}\r\n      _chart[id] = echarts.init(document.getElementById(id))\r\n      vm.chart = Object.assign({}, vm.chart, _chart)\r\n      vm['chart'][id].setOption({\r\n        title : {\r\n          text: '注册用户种植作物总产量排行榜',\r\n          textStyle: {\r\n            fontWeight: 'lighter',\r\n            fontSize: 14\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name: '用户',\r\n          data: edata.xAxis\r\n        },\r\n        xAxis: {\r\n          name: '产量',\r\n          type: 'value',\r\n          axisLine: {\r\n            show: true\r\n          },\r\n          axisTick: {\r\n            show: true\r\n          },\r\n          axisLabel: {\r\n            show: true\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '9%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        series: [{\r\n          name: '数量',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n              textStyle: {\r\n                color: 'white' //color of value\r\n              }\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: '#0590eb' // 0% 处的颜色\r\n              }, {\r\n                offset: 1,\r\n                color: '#08e3f1' // 100% 处的颜色\r\n              }], false)\r\n              // barBorderRadius: [0, 15,15, 0],\r\n              // shadowColor: 'rgba(0,0,0,0.1)',\r\n              // shadowBlur: 3,\r\n              // shadowOffsetY: 3\r\n            }\r\n          },\r\n          data: edata.series[0].data\r\n        }]\r\n      })\r\n    },\r\n    drawLine (id, edata) {\r\n      let vm = this\r\n      if (document.getElementById(id) === null) {\r\n        return false\r\n      }\r\n      let _chart = {}\r\n      _chart[id] = echarts.init(document.getElementById(id))\r\n      vm.chart = Object.assign({}, vm.chart, _chart)\r\n      vm['chart'][id].setOption({\r\n        title: {\r\n          text: '平台活跃用户走势图',\r\n          textStyle: {\r\n            fontWeight: 'lighter',\r\n            fontSize: 14\r\n          }\r\n        },\r\n        color:['#DF9695','#000'],\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          top: '15%',\r\n          containLabel: true\r\n        },\r\n        legend: {\r\n          data: ['签约用户', '非签约用户']\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            name: '时间',\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: edata.xAxis\r\n          }\r\n        ],\r\n        yAxis: {\r\n          name: '数量',\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '签约用户',\r\n            type: 'line',\r\n            areaStyle: {\r\n              normal: {\r\n                type: 'default',\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(199, 37, 50,0.2)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(199, 37, 50,0.2)'\r\n                }], false)\r\n              }\r\n            },\r\n            smooth: true,\r\n            itemStyle: {\r\n              normal: {areaStyle: {type: 'default'}}\r\n            },\r\n            data: edata.series[1]\r\n          },\r\n          {\r\n            name: '非签约用户',\r\n            type: 'line',\r\n            areaStyle: {\r\n              normal: {\r\n                type: 'default',\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(19, 37, 250,0.2)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(19, 37, 250,0.2)'\r\n                }], false)\r\n              }\r\n            },\r\n            smooth: true,\r\n            itemStyle: {normal: {areaStyle: {type: 'default'}}},\r\n            data: edata.series[2]\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    drawMap (id, edata) {\r\n      let vm = this\r\n      if (document.getElementById(id) === null) {\r\n        return false\r\n      }\r\n      let _chart = {}\r\n      _chart[id] = echarts.init(document.getElementById(id))\r\n      vm.chart = Object.assign({}, vm.chart, _chart)\r\n      vm['chart'][id].setOption({\r\n        backgroundColor: '#404a59',\r\n        title: {\r\n          text: '智 慧 农 业 用 户 群 体 分 布 区 图',\r\n          x:'center',\r\n          top: '10%',\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontWeight: 'lighter'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: function (params) {\r\n            let datas = params.name + '<br />会员数 : ' + params.value[2] + '<br />签约会员数 : ' + params.value[3]\r\n            return datas\r\n          }\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          y: 'bottom',\r\n          x:'right',\r\n          data:[''],\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        visualMap: {\r\n          show: false,\r\n          min: 0,\r\n          max: 200,\r\n          calculable: true,\r\n          inRange: {\r\n            color: ['#50a3ba', '#eac736', '#d94e5d']\r\n          },\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        geo: {\r\n          map: 'china',\r\n          roam: true,\r\n          label: {\r\n            emphasis: {\r\n              show: true\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: '#323c48',\r\n              borderColor: '#111'\r\n            },\r\n            emphasis: {\r\n              areaColor: '#2a333d'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: 'pm2.5',\r\n            type: 'scatter',\r\n            coordinateSystem: 'geo',\r\n            data: edata,\r\n            symbolSize: 12,\r\n            label: {\r\n              normal: {\r\n                show: false\r\n              },\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            itemStyle: {\r\n              emphasis: {\r\n                borderColor: '#fff',\r\n                borderWidth: 1\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    drawLineAll (id, edata) {\r\n      let vm = this\r\n      if (document.getElementById(id) === null) {\r\n        return false\r\n      }\r\n      let _chart = {}\r\n      _chart[id] = echarts.init(document.getElementById(id))\r\n      vm.chart = Object.assign({}, vm.chart, _chart)\r\n      vm['chart'][id].setOption({\r\n        title: {\r\n          text: '用户总数统计及分析',\r\n          textStyle: {\r\n            fontWeight: 'lighter',\r\n            fontSize: 14\r\n          }\r\n        },\r\n        color:['#fbceb2','#dbb0e3'],\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          top: '15%',\r\n          containLabel: true\r\n        },\r\n        legend: {\r\n          data: ['签约用户', '非签约用户']\r\n        },\r\n        calculable: true,\r\n        xAxis: [\r\n          {\r\n            name: '时间',\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: edata.xAxis\r\n          }\r\n        ],\r\n        yAxis: {\r\n          name: '数量',\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '签约用户',\r\n            type: 'line',\r\n            areaStyle: {\r\n              normal: {\r\n                type: 'default',\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(199, 37, 50,0.2)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(199, 37, 50,0.2)'\r\n                }], false)\r\n              }\r\n            },\r\n            smooth: true,\r\n            itemStyle: {\r\n              normal: {areaStyle: {type: 'default'}}\r\n            },\r\n            data: edata.series[1]\r\n          },\r\n          {\r\n            name: '非签约用户',\r\n            type: 'line',\r\n            areaStyle: {\r\n              normal: {\r\n                type: 'default',\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(19, 37, 250,0.2)'\r\n                }, {\r\n                  offset: 1,\r\n                  color: 'rgba(19, 37, 250,0.2)'\r\n                }], false)\r\n              }\r\n            },\r\n            smooth: true,\r\n            itemStyle: {normal: {areaStyle: {type: 'default'}}},\r\n            data: edata.series[2]\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    drawOrder (id, edata) {\r\n      let vm = this\r\n      if (document.getElementById(id) === null) {\r\n        return false\r\n      }\r\n      let _chart = {}\r\n      _chart[id] = echarts.init(document.getElementById(id))\r\n      vm.chart = Object.assign({}, vm.chart, _chart)\r\n      vm['chart'][id].setOption({\r\n        title : {\r\n          text: '区域用户数量排行榜',\r\n          textStyle: {\r\n            fontWeight: 'lighter',\r\n            fontSize: 14\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n          }\r\n        },\r\n        yAxis: {\r\n          name: '区域',\r\n          data: edata.xAxis.reverse()\r\n        },\r\n        xAxis: {\r\n          name: '数量',\r\n          type: 'value',\r\n          axisLine: {\r\n            show: true\r\n          },\r\n          axisTick: {\r\n            show: true\r\n          },\r\n          axisLabel: {\r\n            show: true\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '9%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        series: [{\r\n          name: '数量',\r\n          type: 'bar',\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              position: 'insideRight',\r\n              textStyle: {\r\n                color: 'white' //color of value\r\n              }\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                offset: 0,\r\n                color: '#EF8CD0' // 0% 处的颜色\r\n              }, {\r\n                offset: 1,\r\n                color: '#FFB7A6' // 100% 处的颜色\r\n              }], false),\r\n              barBorderRadius: [0, 15,15, 0],\r\n              shadowColor: 'rgba(0,0,0,0.1)',\r\n              shadowBlur: 3,\r\n              shadowOffsetY: 3\r\n            }\r\n          },\r\n          data: edata.series[0].data.reverse()\r\n        }]\r\n      })\r\n    },\r\n    month () {\r\n      this.time = ''\r\n      let edata\r\n      this.para.endTime = this.formatDate(new Date())\r\n      this.para.beginTime = this.formatDateLastMonth(new Date())\r\n      getUserArea(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        this.drawOrder('order', edata)\r\n      })\r\n      getUserAll(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        this.drawLineAll('userAll', edata)\r\n      })\r\n    },\r\n    quarter () {\r\n      this.time = ''\r\n      let edata\r\n      this.para.endTime = this.formatDate(new Date())\r\n      this.para.beginTime = this.formatDateLastMonthThr(new Date())\r\n      getUserArea(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        this.drawOrder('order', edata)\r\n      })\r\n      getUserAll(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        this.drawLineAll('userAll', edata)\r\n      })\r\n    },\r\n    todayYear () {\r\n      this.time = ''\r\n      let edata\r\n      this.para.endTime = this.formatDate(new Date())\r\n      this.para.beginTime = this.formatDateTodayYear(new Date())\r\n      getUserArea(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        this.drawOrder('order', edata)\r\n      })\r\n      getUserAll(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        this.drawLineAll('userAll', edata)\r\n      })\r\n    },\r\n    lastYear () {\r\n      this.time = ''\r\n      let edata\r\n      this.para.beginTime = this.formatDateLastYear(new Date())\r\n      this.para.endTime = this.formatDateLastYearEnd(new Date())\r\n      getUserArea(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        this.drawOrder('order', edata)\r\n      })\r\n      getUserAll(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        this.drawLineAll('userAll', edata)\r\n      })\r\n    },\r\n    // 日期格式转换-------------------\r\n    formatDate (date) {\r\n      var y = date.getFullYear()\r\n      var m = date.getMonth() + 1\r\n      m = m < 10 ? '0' + m : m\r\n      var d = date.getDate()\r\n      d = d < 10 ? ('0' + d) : d\r\n      var newDate = y + '-' + m + '-' + d\r\n      return newDate\r\n    },\r\n    formatDateLastMonth (date) {\r\n      var y = date.getFullYear()\r\n      var m = date.getMonth() + 1 - 1\r\n      m = m < 10 ? '0' + m : m\r\n      var d = date.getDate()\r\n      d = d < 10 ? ('0' + d) : d\r\n      var newDate = y + '-' + m + '-' + d\r\n      return newDate\r\n    },\r\n    formatDateLastMonthThr (date) {\r\n      var y = date.getFullYear()\r\n      var m = date.getMonth() + 1 - 3\r\n      m = m < 10 ? '0' + m : m\r\n      var d = date.getDate()\r\n      d = d < 10 ? ('0' + d) : d\r\n      var newDate = y + '-' + m + '-' + d\r\n      return newDate\r\n    },\r\n    formatDateTodayYear (date) {\r\n      var y = date.getFullYear()\r\n      // var m = date.getMonth() + 1 - 3\r\n      // m = m < 10 ? '0' + m : m\r\n      // var d = date.getDate()\r\n      // d = d < 10 ? ('0' + d) : d\r\n      var newDate = y + '-01-01'\r\n      return newDate\r\n    },\r\n    formatDateLastYear (date) {\r\n      var y = date.getFullYear() - 1\r\n      var newDate = y + '-01-01'\r\n      return newDate\r\n    },\r\n    formatDateLastYearEnd (date) {\r\n      var y = date.getFullYear() - 1\r\n      var newDate = y + '-12-31'\r\n      return newDate\r\n    },\r\n    timeChange (change) {\r\n      let edata\r\n      if (change[0] !== '' && change[1] !== undefined) {\r\n        this.para.beginTime = this.formatDate(new Date(change[0]))\r\n        this.para.endTime = this.formatDate(new Date(change[1]))\r\n      } else {\r\n        this.para.beginTime = ''\r\n        this.para.endTime = ''\r\n      }\r\n      getUserArea(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        this.drawOrder('order', edata)\r\n      })\r\n      getUserAll(this.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        this.drawLineAll('userAll', edata)\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    getUserCart().then((res) => {\r\n      this.regionAll = res.data.content[0].count\r\n      this.userAll = res.data.content[1].count\r\n      this.activityAll = res.data.content[2].count\r\n      this.bigUserAll = res.data.content[3].count\r\n      this.regionNum = res.data.content[0].monthCount\r\n      this.addUserNum = res.data.content[1].monthCount\r\n      this.activityUserNum = res.data.content[2].monthCount\r\n      this.addBigUserNum = res.data.content[3].monthCount\r\n    })\r\n  },\r\n  mounted () {\r\n    let edata\r\n    let vm = this\r\n    // 用户种植作物++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n    vm.$nextTick(function () {\r\n      getUserPlant().then((resp) => {\r\n        edata = FormateGroupData(resp.data.content, 'line', false)\r\n        vm.drawBar('plant', edata)\r\n      })\r\n    })\r\n    // 用户活跃度++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n    vm.$nextTick(function () {\r\n      getUserActitity().then((ress) => {\r\n        edata = FormateGroupData(ress.data.content, 'line', false)\r\n        var d1 = []\r\n        var d2 = []\r\n        for (var i = 0; i < edata.series[0].data.length; i++) {\r\n          d1.push(edata.series[0].data[i][0])\r\n          d2.push(edata.series[0].data[i][1])\r\n        }\r\n        edata.series[1] = d1\r\n        edata.series[2] = d2\r\n        vm.drawLine('activity', edata)\r\n      })\r\n    })\r\n    // 用户总数++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n    vm.$nextTick(function () {\r\n      getUserArea(vm.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}]\r\n          edata.series[0].data = []\r\n        }\r\n        vm.drawOrder('order', edata)\r\n      })\r\n    })\r\n    // 区域用户排行++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n    vm.$nextTick(function () {\r\n      getUserAll(vm.para).then((res) => {\r\n        if (res.data.code === 30000) {\r\n          edata = FormateGroupData(res.data.content, 'line', false)\r\n          var d1 = []\r\n          var d2 = []\r\n          for (var i = 0; i < edata.series[0].data.length; i++) {\r\n            d1.push(edata.series[0].data[i][0])\r\n            d2.push(edata.series[0].data[i][1])\r\n          }\r\n          edata.series[1] = d1\r\n          edata.series[2] = d2\r\n        } else if (res.data.code !== 30000) {\r\n          edata = {}\r\n          edata.xAxis = []\r\n          edata.series = [{}, {}]\r\n          edata.series[1].data = []\r\n          edata.series[2].data = []\r\n        }\r\n        vm.drawLineAll('userAll', edata)\r\n      })\r\n    })\r\n    // 地图++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n    vm.$nextTick(function () {\r\n      getUsermap().then((resg) => {\r\n        edata = resg.data.content\r\n        // console.log(edata)\r\n        vm.drawMap('map', edata)\r\n      })\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n  padding: 20px;\r\n  text-align: left;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/user/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body\"},[_c('Row',{attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"总注册用户数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.regionAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台注册所有用户数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"今日注册    \"+_vm._s(_vm.regionNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"签约用户数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.userAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台所有签约用户数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月新增签约用户    \"+_vm._s(_vm.addUserNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"活跃用户数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.activityAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台所有活跃用户数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"今日活跃    \"+_vm._s(_vm.activityUserNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"农业大户数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.bigUserAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台所有农业大户数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月新增    \"+_vm._s(_vm.addBigUserNum))])],1)],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"#404a59\"}},[_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('Col',{attrs:{\"span\":\"24\"}},[_c('div',{staticStyle:{\"height\":\"800px\"},attrs:{\"id\":\"map\"}})])],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"12\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"注册用户种植作物总产量排行榜\")]),_vm._v(\" \"),_c('p'),_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"plant\"}}),_c('p')])],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"12\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"平台活跃用户走势图（近6个月）\")]),_vm._v(\" \"),_c('p'),_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"activity\"}}),_c('p')])],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('Col',{attrs:{\"span\":\"24\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"用户总数统计及分析\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"extra\"},slot:\"extra\"},[_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.month}},[_vm._v(\"近一个月\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.quarter}},[_vm._v(\"近三个月\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.todayYear}},[_vm._v(\"今年\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.lastYear}},[_vm._v(\"去年\")]),_vm._v(\" \"),_c('DatePicker',{staticStyle:{\"width\":\"200px\"},attrs:{\"type\":\"daterange\",\"placement\":\"bottom-end\",\"placeholder\":\"选择日期\",\"editable\":false},on:{\"on-change\":_vm.timeChange},model:{value:(_vm.time),callback:function ($$v) {_vm.time=$$v},expression:\"time\"}})],1),_vm._v(\" \"),_c('Row',[_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"userAll\"}})]),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"order\"}})])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3407a4d9\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/user/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3407a4d9\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3407a4d9\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3407a4d9\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/user/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}