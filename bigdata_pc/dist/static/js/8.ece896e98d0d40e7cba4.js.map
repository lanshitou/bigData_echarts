{"version":3,"sources":["webpack:///src/view/mall/index.vue","webpack:///./src/view/mall/index.vue?1956","webpack:///./src/view/mall/index.vue"],"names":["mall","id","this","_chart","x","edata","features","name","cp","value","res","datas","b","data","geoCoordMap","j","dataItem","opp","option","_this","content","edatae","xAxis","reverse","_this2","Date","_this3","_this4","_this5","getFullYear","m","getDate","d","_this6","_this7","count","monthCount","_this8","view_mall","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","gutter","span","staticStyle","height","slot","_v","font-size","_s","expertAll","placement","type","size","expertNum","areaAll","addAreaNum","plantAll","plantNum","questionAll","questionNum","margin-top","serviceAll","serviceNum","adoptAll","adoptNum","evaluateAll","evaluateNum","videoAll","videoNum","background-color","button","justify","_e","position","padding-bottom","padding-left","on","on-change","changeMap","model","callback","$$v","expression","label","click","month","quarter","todayYear","lastYear","width","placeholder","editable","timeChange","time","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8MA8LAA,qCAIA,kBACA,oBAEA,WAEA,SACA,sBAEA,WACA,YACA,eACA,aACA,iBACA,cACA,iBACA,gBACA,YACA,eACA,YACA,cACA,eACA,iBACA,cAEA,sFAMA,iDAGAC,IALAC,6BAMAC,GANAD,0CASA,qCAMA,0BAEA,iBACA,cACA,UACA,SACA,yBAGA,SAGA,mBAEA,WACA,YACA,mBAEA,gBAEA,UACA,wBACA,6BAKA,mBAEAE,iBAEA,aACA,4BAGA,8BAKA,8BAEA,uBAIA,iCAMA,mCAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,mCAEA,SACA,2BACA,eACA,gCAGA,8BAGA,8BACA,oCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,kCAEA,SACA,0BACA,eACA,gCAGA,8BAGA,6BACA,kCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,kCAEA,SACA,0BACA,eACA,gCAGA,8BAGA,6BACA,kCAGA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,mCAEA,SACA,2BACA,eACA,gCAGA,8BAGA,gCACA,sCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,kCAEA,SACA,0BACA,eACA,gCAGA,8BAGA,+BACA,qCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,kCAEA,SACA,0BACA,eACA,gCAGA,8BAGA,+BACA,qCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,4BAEA,SACA,oBACA,eACA,gCAGA,8BAGA,yBACA,+BAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,gCAEA,SACA,wBACA,eACA,gCAGA,8BAGA,6BACA,mCAIA,cACA,iBAEA,QACA,eACA,SACA,oBACA,cACA,2BAKA,6EAIA,QACA,8BAEA,SACA,sBACA,eACA,gCAGA,8BAGA,2BACA,iCAIA,cACA,iBAE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","file":"static/js/8.ece896e98d0d40e7cba4.js","sourcesContent":["<template>\r\n  <div class=\"body\">\r\n    <Row :gutter=\"32\" >\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>订单总交易额</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{expertAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台订单总交易额\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月增长 &nbsp;&nbsp;&nbsp;{{expertNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>农业种植解决方案数目</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{areaAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台农业种植解决方案数目\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月新增方案 &nbsp;&nbsp;&nbsp;{{addAreaNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>商品总数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{plantAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台商品总数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月上架 &nbsp;&nbsp;&nbsp;{{plantNum}} 件</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>总订单数</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{questionAll}}</span></p>\r\n        <Tooltip content=\"平台总订单数\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月订单数 &nbsp;&nbsp;&nbsp;{{questionNum}}</p>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row :gutter=\"32\" style=\"margin-top: 20px\">\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>出售肥料总质量</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{serviceAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台出售肥料总质量\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月出售 &nbsp;&nbsp;&nbsp;{{serviceNum}}次</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>自提点数量</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{adoptAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台自提点数量\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月新增自提点 &nbsp;&nbsp;&nbsp;{{adoptNum}}</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>站长/服务人员数量</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{evaluateAll}}</span>\r\n        </p>\r\n        <Tooltip content=\"平台站长/服务人员数量\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月增长 &nbsp;&nbsp;&nbsp;{{evaluateNum}}个</p>\r\n      </Card>\r\n      </Col>\r\n      <Col span=\"6\" >\r\n      <Card>\r\n        <p slot=\"title\" style=\"height: 90px\">\r\n          <span>肥料销售区域</span>\r\n          <br><br><br>\r\n          <span style=\"font-size: 40px;\">{{videoAll}}</span></p>\r\n        <Tooltip content=\"平台专家在线视频教学时长\" placement=\"left-end\"  slot=\"extra\">\r\n          <Icon type=\"ios-information-outline\" size=\"24\"></Icon>\r\n        </Tooltip>\r\n        <p>本月最增 &nbsp;&nbsp;&nbsp;{{videoNum}}</p>\r\n      </Card>\r\n      </Col>\r\n    </Row >\r\n    <div style=\"background-color: #404a59;\">\r\n      <!--地图=================================================================================================-->\r\n      <Row style=\"margin-top: 20px;\" type=\"flex\" justify=\"center\" v-if=\"button === '0'\">\r\n        <Col span=\"24\" >\r\n        <div >\r\n          <div id=\"map\" style=\"height:800px;\" >\r\n          </div>\r\n        </div>\r\n        </Col>\r\n      </Row>\r\n      <!--地图=================================================================================================-->\r\n      <Row style=\"margin-top: 20px;\" type=\"flex\" justify=\"center\"  v-if=\"button === '1'\">\r\n        <Col span=\"24\" >\r\n        <div style=\"position: relative\">\r\n          <div id=\"map1\" style=\"height:800px;\"></div>\r\n        </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row type=\"flex\" justify=\"start\" >\r\n        <Col span=\"4\">\r\n        <div style=\"padding-bottom: 50px;padding-left: 30px\">\r\n          <RadioGroup v-model=\"button\" type=\"button\" @on-change=\"changeMap\">\r\n            <Radio label=\"0\">订单飞线</Radio>\r\n            <Radio label=\"1\">销售区域</Radio>\r\n          </RadioGroup>\r\n        </div>\r\n        </Col>\r\n      </Row>\r\n\r\n    </div>\r\n    <!--订单 排行、折线图=================================================================================================-->\r\n    <Row style=\"margin-top: 20px;\" type=\"flex\" justify=\"center\">\r\n      <Col span=\"24\" >\r\n      <Card>\r\n        <p slot=\"title\">订单走势图</p>\r\n        <div  slot=\"extra\">\r\n          <Button type=\"text\" @click=\"month\">近一个月</Button>\r\n          <Button type=\"text\" @click=\"quarter\">近三个月</Button>\r\n          <Button type=\"text\" @click=\"todayYear\">今年</Button>\r\n          <Button type=\"text\" @click=\"lastYear\">去年</Button>\r\n          <DatePicker v-model=\"time\" type=\"daterange\" placement=\"bottom-end\" placeholder=\"选择日期\" style=\"width: 200px\" :editable=\"false\" @on-change=\"timeChange\" ></DatePicker>\r\n        </div>\r\n        <Row>\r\n          <Col span=\"12\">\r\n          <div id=\"userAll\" style=\"height:400px;\"></div>\r\n          </Col>\r\n          <Col span=\"12\">\r\n          <div id=\"order\" style=\"height:400px;\"></div>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n\r\n    <Row :gutter=\"32\" style=\"margin-top: 20px\">\r\n      <!--饼图=================================================================================================-->\r\n      <Col span=\"12\" >\r\n      <Card>\r\n        <p slot=\"title\" >订单肥料类型占比</p>\r\n        <p><div id=\"activity\" style=\"height:500px;\"></div></p>\r\n      </Card>\r\n      </Col>\r\n      <!--柱状排行榜图=================================================================================================-->\r\n      <Col span=\"12\" >\r\n      <Card>\r\n        <p slot=\"title\" >\r\n          <span>肥料提供商销量分析</span>\r\n          <br>\r\n        </p>\r\n        <p><div id=\"plant\" style=\"height:500px;\"></div></p>\r\n      </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { FormateGroupData } from '../../framework/utils'\r\n  import echarts from 'echarts'\r\n  import china from 'echarts/map/js/china'\r\n  import { getMallCompany, getMallFertilizer, getMallOrder, getMallOrderForm, getMallCart, getMallAreaMap, getMallFlyMap} from '../../api/api'\r\n  export default {\r\n    data () {\r\n      return {\r\n        expertName: '专家活跃度排行榜',\r\n        button: '0',\r\n        para: {\r\n          beginTime: '',\r\n          endTime: ''\r\n        },\r\n        time: '',\r\n        chart: {},\r\n        expertAll: '',\r\n        areaAll: '',\r\n        plantAll: '',\r\n        questionAll: '',\r\n        expertNum: '300',\r\n        addAreaNum: '20',\r\n        plantNum: '90',\r\n        questionNum: '40',\r\n        serviceAll: '',\r\n        adoptAll: '',\r\n        evaluateAll: '',\r\n        videoAll: '',\r\n        serviceNum: '300',\r\n        adoptNum: '20',\r\n        evaluateNum: '90',\r\n        videoNum: '40'\r\n      }\r\n    },\r\n    methods: {\r\n      drawCompany (id, edata) {\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        vm['chart'][id].setOption({\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n              lineStyle: {\r\n                color: '#57617B'\r\n              }\r\n            }\r\n          },\r\n          legend: {\r\n            icon: 'rect',\r\n            itemWidth: 14,\r\n            itemHeight: 5,\r\n            itemGap: 13,\r\n            right: '4%',\r\n            // data: [],\r\n            textStyle: {\r\n              fontSize: 12,\r\n              color: 'red'\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '9%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          xAxis: [{\r\n            name: '时间',\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#57617B'\r\n              }\r\n            },\r\n            data: edata.x\r\n          }],\r\n          yAxis: [{\r\n            type: 'value',\r\n            name: '订单数量 (/条)',\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#57617B'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              margin: 10,\r\n              textStyle: {\r\n                fontSize: 14\r\n              }\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: '#57617B'\r\n              }\r\n            }\r\n          }],\r\n          series: [{\r\n            name: edata.name[0],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(137, 189, 27, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(137, 189, 27, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(137,189,27)',\r\n                borderColor: 'rgba(137,189,27,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[0]\r\n          }, {\r\n            name: edata.name[1],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(0, 136, 212, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(0, 136, 212, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(0,136,212)',\r\n                borderColor: 'rgba(0,136,212,0.2)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[1]\r\n          }, {\r\n            name: edata.name[2],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(219, 50, 51, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(219, 50, 51, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(219,50,51)',\r\n                borderColor: 'rgba(219,50,51,0.2)',\r\n                borderWidth: 12\r\n              }\r\n            },\r\n            data: edata.y[2]\r\n          }, {\r\n            name: edata.name[3],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(160, 32, 240, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(160, 32, 240, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(160, 32, 240)',\r\n                borderColor: 'rgba(160, 32, 240,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[3]\r\n          }, {\r\n            name: edata.name[4],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(255, 165, 0, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(255, 165, 0, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(255, 165, 0)',\r\n                borderColor: 'rgba(255, 165, 0,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[4]\r\n          }, {\r\n            name: edata.name[5],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(34, 139, 34, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(34, 139, 34, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(34, 139, 34)',\r\n                borderColor: 'rgba(34, 139, 34,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[5]\r\n          }, {\r\n            name: edata.name[6],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(0,0,0, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(0,0,0, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(0,0,0)',\r\n                borderColor: 'rgba(0,0,0,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[6]\r\n          }, {\r\n            name: edata.name[7],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(255,255,0, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(255,255,0, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(255,255,0)',\r\n                borderColor: 'rgba(255,255,0,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[7]\r\n          }, {\r\n            name: edata.name[8],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                  offset: 0,\r\n                  color: 'rgba(0,0,255, 0.3)'\r\n                }, {\r\n                  offset: 0.8,\r\n                  color: 'rgba(0,0,255, 0)'\r\n                }], false),\r\n                shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                shadowBlur: 10\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'rgb(0,0,255)',\r\n                borderColor: 'rgba(0,0,255,0.27)',\r\n                borderWidth: 12\r\n\r\n              }\r\n            },\r\n            data: edata.y[8]\r\n          }, {\r\n            name: edata.name[9],\r\n            type: 'line',\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 5,\r\n            showSymbol: false,\r\n            lineStyle: {\r\n              normal: {\r\n                width: 1\r\n              }\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                normal: {\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(139, 69 ,19, 0.3)'\r\n                  }, {\r\n                    offset: 0.8,\r\n                    color: 'rgba(139, 69 ,19, 0)'\r\n                  }], false),\r\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n                  shadowBlur: 10\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgb(139, 69 ,19)',\r\n                  borderColor: 'rgba(139, 69 ,19,0.27)',\r\n                  borderWidth: 12\r\n\r\n                }\r\n              }\r\n            },\r\n            data: edata.y[9]\r\n          }]\r\n        })\r\n      },\r\n      drawpie (id, edata) {\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        vm['chart'][id].setOption({\r\n          backgroundColor: '#fff',\r\n          title: {\r\n            text: '肥料分类占比',\r\n            subtext: '2018年',\r\n            x: 'center',\r\n            y: 'center',\r\n            textStyle: {\r\n              fontWeight: 'normal',\r\n              fontSize: 16\r\n            }\r\n          },\r\n          tooltip: {\r\n            show: true,\r\n            trigger: 'item',\r\n            formatter: \"{b}: {c}kg ({d}%)\"\r\n          },\r\n          legend: {\r\n            orient: 'horizontal',\r\n            bottom: '0%'\r\n            // data:\r\n          },\r\n          series: [{\r\n            type: 'pie',\r\n            selectedMode: 'single',\r\n            radius: ['25%', '58%'],\r\n            color: ['#86D560', '#AF89D6', '#59ADF3', '#FF999A', '#FFCC67'],\r\n\r\n            label: {\r\n              normal: {\r\n                position: 'inner',\r\n                formatter: '{d}%',\r\n\r\n                textStyle: {\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 14\r\n                }\r\n              }\r\n            },\r\n            labelLine: {\r\n              normal: {\r\n                show: false\r\n              }\r\n            },\r\n            data: edata\r\n          }, {\r\n            type: 'pie',\r\n            radius: ['58%', '83%'],\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#F2F2F2'\r\n              },\r\n              emphasis: {\r\n                color: '#ADADAD'\r\n              }\r\n            },\r\n            label: {\r\n              normal: {\r\n                position: 'inner',\r\n                formatter: '{c}kg',\r\n                textStyle: {\r\n                  color: '#777777',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 14\r\n                }\r\n              }\r\n            },\r\n            data: edata\r\n          }]\r\n        })\r\n      },\r\n      drawMap (id, edata) {\r\n        var geoCoordMap = {}\r\n        var mapFeatures = echarts.getMap('china').geoJson.features\r\n        mapFeatures.forEach(function(v) {\r\n          // 地区名称\r\n          var name = v.properties.name\r\n          // 地区经纬度\r\n          geoCoordMap[name] = v.properties.cp\r\n\r\n        });\r\n        var convertData = function(data) {\r\n          var res = []\r\n          for (var i = 0; i < data.length; i++) {\r\n            var geoCoord = geoCoordMap[data[i].name]\r\n            if (geoCoord) {\r\n              res.push({\r\n                name: data[i].name,\r\n                value: geoCoord.concat(data[i].value),\r\n              })\r\n            }\r\n          }\r\n          return res\r\n        }\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        vm['chart'][id].setOption({\r\n          backgroundColor: '#404a59',\r\n          title: {\r\n            text: '智 慧 农 业 订 单 分 布 图',\r\n            x:'center',\r\n            top: '10%',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontWeight: 'lighter'\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            formatter: function (params) {\r\n              let datas\r\n              if (params.seriesIndex === 1) {\r\n                if (params.data !== undefined) {\r\n                  datas = params.name + '<br />订单数量 : ' + params.data.value[0] + '<br />交易总额 : ' + params.data.value[1] + '<br />总重量 : ' + params.data.value[2] + 'kg<br />方案条目 : ' + params.data.value[3] + '<br />排名 : ' + params.data.value[4]\r\n                }\r\n              } else {\r\n                datas = params.name + '<br />订单数量 : ' + params.data.value[2] + '<br />交易总额 : ' + params.data.value[3] + '<br />总重量 : ' + params.data.value[4] + 'kg<br />方案条目 : ' + params.data.value[5] + '<br />排名 : ' + params.data.value[6]\r\n              }\r\n              return datas\r\n            }\r\n          },\r\n          visualMap: {\r\n            show: false,\r\n            min: 0,\r\n            max: 100,\r\n            calculable: true,\r\n            seriesIndex: [1],\r\n            inRange: {\r\n              color: ['#00467F', '#A5CC82']\r\n            },\r\n            textStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'china',\r\n            //  地图随着鼠标滚动缩放\r\n            // roam: true,\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n                color: '#c1c4c8'\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#031525',\r\n                borderColor: '#3B5077',\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2B91B7',\r\n              }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '散点',\r\n              type: 'scatter',\r\n              coordinateSystem: 'geo',\r\n              data: convertData(edata),\r\n              symbolSize: function(val) {\r\n                return val[2] / 10;\r\n              },\r\n              label: {\r\n                normal: {\r\n                  formatter: '{b}',\r\n                  position: 'right',\r\n                  show: true\r\n                },\r\n                emphasis: {\r\n                  show: true\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#05C3F9'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              type: 'map',\r\n              map: 'china',\r\n              geoIndex: 0,\r\n              aspectScale: 0.75, //长宽比\r\n              showLegendSymbol: false, // 存在legend时显示\r\n              label: {\r\n                normal: {\r\n                  show: true\r\n                },\r\n                emphasis: {\r\n                  show: false,\r\n                  textStyle: {\r\n                    color: '#fff'\r\n                  }\r\n                }\r\n              },\r\n              // roam: true,\r\n              itemStyle: {\r\n                normal: {\r\n                  areaColor: '#031525',\r\n                  borderColor: '#3B5077',\r\n                },\r\n                emphasis: {\r\n                  areaColor: '#2B91B7'\r\n                }\r\n              },\r\n              animation: false,\r\n              data: edata\r\n            },\r\n            {\r\n              name: '点111',\r\n              type: 'scatter',\r\n              coordinateSystem: 'geo',\r\n              symbol: 'pin', //气泡\r\n              symbolSize: function(val) {\r\n                var a = (100 - 20) / (480 - 9);\r\n                var b = 20 - a * 9;\r\n                b = 100 - a * 480;\r\n                return a * val[2] + b;\r\n              },\r\n              label: {\r\n                normal: {\r\n                  show: true,\r\n                  formatter:function (params) {\r\n                    return params.value[6]\r\n                  },\r\n                  textStyle: {\r\n                    color: '#fff',\r\n                    fontSize: 9,\r\n                  }\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#F62157', //标志颜色\r\n                }\r\n              },\r\n              zlevel: 6,\r\n              data: convertData(edata),\r\n            }\r\n          ]\r\n        })\r\n      },\r\n      drawMapArea (id, edata) {\r\n        var geoCoordMap = {}\r\n        var mapFeatures = echarts.getMap('china').geoJson.features\r\n        mapFeatures.forEach(function(v) {\r\n          // 地区名称\r\n          var name = v.properties.name\r\n          // 地区经纬度\r\n          geoCoordMap[name] = v.properties.cp\r\n        })\r\n        // console.log(JSON.stringify(geoCoordMap))\r\n        var data = edata.data\r\n        var convertData = function(data) {\r\n          var res = []\r\n          for (var i = 0; i < data.length; i++) {\r\n            var geoCoord = geoCoordMap[data[i].name];\r\n\r\n            if (geoCoord) {\r\n              res.push({\r\n                name: data[i].name,\r\n                value: geoCoord.concat(data[i].value)\r\n              })\r\n            }\r\n          }\r\n          return res\r\n        }\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        var option = {\r\n          backgroundColor: '#404a59',\r\n          title: {\r\n            text: '智 慧 农 业 订 单 飞 线 图',\r\n            x:'center',\r\n            top: '10%',\r\n            textStyle: {\r\n              color: '#fff',\r\n              fontWeight: 'lighter'\r\n            }\r\n          },\r\n\r\n          tooltip: {\r\n            trigger: 'item'\r\n\r\n          },\r\n\r\n          visualMap: {\r\n            show: false,\r\n            min: 0,\r\n            max: 100,\r\n            left: 'left',\r\n            top: 'bottom',\r\n            text: ['高', '低'],\r\n            calculable: true,\r\n            inRange: {\r\n              color: ['#ffffff', '#E0DAFF', '#ADBFFF', '#9CB4FF', '#6A9DFF', '#3889FF']\r\n            }\r\n          },\r\n          geo: {\r\n            map: 'china',\r\n            zoom: 1.2,\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n                color: '#c1c4c8'\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n                // color: '#292929'\r\n              }\r\n            },\r\n            // roam: true,\r\n            itemStyle: {\r\n              normal: {\r\n                areaColor: '#031525',\r\n                borderColor: '#3B5077'\r\n              },\r\n              emphasis: {\r\n                areaColor: '#2B91B7'\r\n              }\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '目的地点',\r\n              type: 'effectScatter',\r\n              coordinateSystem: 'geo',\r\n              // name value [经纬度]\r\n              data: convertData(data),\r\n              symbolSize: 8,\r\n              showEffectOn: 'render',\r\n              rippleEffect: {\r\n                scale: 5,\r\n                brushType: 'stroke'\r\n              },\r\n              hoverAnimation: true,\r\n              label: {\r\n                normal: {\r\n                  formatter: '{b}',\r\n                  position: 'right',\r\n                  show: true\r\n                },\r\n                emphasis: {\r\n                  show: true\r\n                }\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  color: '#c60fff',\r\n                  shadowBlur: 20,\r\n                  shadowColor: '#333'\r\n                }\r\n              }\r\n            },\r\n            {\r\n              type: 'map',\r\n              mapType: 'china',\r\n              geoIndex: 0,\r\n              label: {\r\n                normal: {\r\n                  show: true\r\n                },\r\n                emphasis: {\r\n                  show: true\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n        for (var j = 0; j < edata.length - 1; j++) {\r\n          var opp ={\r\n            name: edata[j][0].name,\r\n            type: 'lines',\r\n            zlevel: 2,\r\n            symbol: ['none', 'arrow'],\r\n            symbolSize: 10,\r\n            effect: {\r\n              show: true,\r\n              period: 6,\r\n              trailLength: 0\r\n            },\r\n            lineStyle: {\r\n              normal: {\r\n                color:'#c60fff',\r\n                width: 2,\r\n                opacity:0.5,\r\n                curveness:0.2\r\n              }\r\n            },\r\n            data: edata[j].map(function (dataItem) {\r\n              // console.log(geoCoordMap['重庆市'])\r\n              return {\r\n                fromName: edata[j][0].name,\r\n                toName: dataItem.name,\r\n                coords: [\r\n                  geoCoordMap[edata[j][0].name],\r\n                  geoCoordMap[dataItem.name]\r\n                ]\r\n              }\r\n            })\r\n          }\r\n          option.series.push(opp)\r\n        }\r\n        vm['chart'][id].setOption(option)\r\n      },\r\n      changeMap () {\r\n        if (this.button === '1') {\r\n          getMallAreaMap().then((res) => {\r\n            var edatae = res.data.content\r\n            for (var i = 0; i < edatae.length; i++) {\r\n              edatae[i].name = edatae[i].name.slice(0, edatae[i].name.length - 1)\r\n            }\r\n            this.drawMap('map1', edatae)\r\n          })\r\n        } else if (this.button === '0') {\r\n          getMallFlyMap().then((resg) => {\r\n            var edata = resg.data.content\r\n            edata.data = []\r\n            for (var i = 0; i < edata.length; i++) {\r\n              for (var j = 0; j < edata[i].length; j++) {\r\n                edata[i][j].name = edata[i][j].name.slice(0, edata[i][j].name.length - 1)\r\n                edata.data.push(edata[i][j])\r\n              }\r\n            }\r\n            this.drawMapArea('map', edata)\r\n          })\r\n        }\r\n      },\r\n      drawLineAll (id, edata) {\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        vm['chart'][id].setOption({\r\n          title: {\r\n            text: '订单走势图',\r\n            textStyle: {\r\n              fontWeight: 'lighter',\r\n              fontSize: 14\r\n            }\r\n          },\r\n          color:['#fbceb2','#dbb0e3'],\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            top: '15%',\r\n            containLabel: true\r\n          },\r\n          calculable: true,\r\n          xAxis: [\r\n            {\r\n              name: '时间',\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              data: edata.xAxis\r\n            }\r\n          ],\r\n          yAxis: {\r\n            name: '订单数量',\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              name: '签约用户',\r\n              type: 'line',\r\n              areaStyle: {\r\n                normal: {\r\n                  type: 'default',\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: 'rgba(199, 37, 50,0.2)'\r\n                  }, {\r\n                    offset: 1,\r\n                    color: 'rgba(199, 37, 50,0.2)'\r\n                  }], false)\r\n                }\r\n              },\r\n              smooth: true,\r\n              itemStyle: {\r\n                normal: {areaStyle: {type: 'default'}}\r\n              },\r\n              data: edata.series[0].data\r\n            }\r\n          ]\r\n        })\r\n      },\r\n      drawOrder (id, edata) {\r\n        let vm = this\r\n        if (document.getElementById(id) === null) {\r\n          return false\r\n        }\r\n        let _chart = {}\r\n        _chart[id] = echarts.init(document.getElementById(id))\r\n        vm.chart = Object.assign({}, vm.chart, _chart)\r\n        vm['chart'][id].setOption({\r\n          title : {\r\n            text: '订单数量排行榜',\r\n            textStyle: {\r\n              fontWeight: 'lighter',\r\n              fontSize: 14\r\n            }\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n              type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n            }\r\n          },\r\n          yAxis: {\r\n            name: '区域',\r\n            data: edata.xAxis.reverse()\r\n          },\r\n          xAxis: {\r\n            name: '数量',\r\n            type: 'value',\r\n            axisLine: {\r\n              show: true\r\n            },\r\n            axisTick: {\r\n              show: true\r\n            },\r\n            axisLabel: {\r\n              show: true\r\n            },\r\n            splitLine: {\r\n              show: false\r\n            }\r\n          },\r\n          grid: {\r\n            left: '3%',\r\n            right: '9%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n          },\r\n          series: [{\r\n            name: '数量',\r\n            type: 'bar',\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'insideRight',\r\n                textStyle: {\r\n                  color: 'white' //color of value\r\n                }\r\n              }\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                  offset: 0,\r\n                  color: '#EF8CD0' // 0% 处的颜色\r\n                }, {\r\n                  offset: 1,\r\n                  color: '#FFB7A6' // 100% 处的颜色\r\n                }], false),\r\n                barBorderRadius: [0, 15,15, 0],\r\n                shadowColor: 'rgba(0,0,0,0.1)',\r\n                shadowBlur: 3,\r\n                shadowOffsetY: 3\r\n              }\r\n            },\r\n            data: edata.series[0].data.reverse()\r\n          }]\r\n        })\r\n      },\r\n      month () {\r\n        this.time = ''\r\n        let edata\r\n        this.para.endTime = this.formatDate(new Date())\r\n        this.para.beginTime = this.formatDateLastMonth(new Date())\r\n        getMallOrderForm(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawLineAll('userAll', edata)\r\n        })\r\n        getMallOrder(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawOrder('order', edata)\r\n        })\r\n      },\r\n      quarter () {\r\n        this.time = ''\r\n        let edata\r\n        this.para.endTime = this.formatDate(new Date())\r\n        this.para.beginTime = this.formatDateLastMonthThr(new Date())\r\n        getMallOrderForm(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawLineAll('userAll', edata)\r\n        })\r\n        getMallOrder(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawOrder('order', edata)\r\n        })\r\n      },\r\n      todayYear () {\r\n        this.time = ''\r\n        let edata\r\n        this.para.endTime = this.formatDate(new Date())\r\n        this.para.beginTime = this.formatDateTodayYear(new Date())\r\n        getMallOrderForm(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawLineAll('userAll', edata)\r\n        })\r\n        getMallOrder(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawOrder('order', edata)\r\n        })\r\n      },\r\n      lastYear () {\r\n        this.time = ''\r\n        let edata\r\n        this.para.beginTime = this.formatDateLastYear(new Date())\r\n        this.para.endTime = this.formatDateLastYearEnd(new Date())\r\n        getMallOrderForm(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawLineAll('userAll', edata)\r\n        })\r\n        getMallOrder(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawOrder('order', edata)\r\n        })\r\n      },\r\n      // 日期格式转换-------------------\r\n      formatDate (date) {\r\n        var y = date.getFullYear()\r\n        var m = date.getMonth() + 1\r\n        m = m < 10 ? '0' + m : m\r\n        var d = date.getDate()\r\n        d = d < 10 ? ('0' + d) : d\r\n        var newDate = y + '-' + m + '-' + d\r\n        return newDate\r\n      },\r\n      formatDateLastMonth (date) {\r\n        var y = date.getFullYear()\r\n        var m = date.getMonth() + 1 - 1\r\n        m = m < 10 ? '0' + m : m\r\n        var d = date.getDate()\r\n        d = d < 10 ? ('0' + d) : d\r\n        var newDate = y + '-' + m + '-' + d\r\n        return newDate\r\n      },\r\n      formatDateLastMonthThr (date) {\r\n        var y = date.getFullYear()\r\n        var m = date.getMonth() + 1 - 3\r\n        m = m < 10 ? '0' + m : m\r\n        var d = date.getDate()\r\n        d = d < 10 ? ('0' + d) : d\r\n        var newDate = y + '-' + m + '-' + d\r\n        return newDate\r\n      },\r\n      formatDateTodayYear (date) {\r\n        var y = date.getFullYear()\r\n        // var m = date.getMonth() + 1 - 3\r\n        // m = m < 10 ? '0' + m : m\r\n        // var d = date.getDate()\r\n        // d = d < 10 ? ('0' + d) : d\r\n        var newDate = y + '-01-01'\r\n        return newDate\r\n      },\r\n      formatDateLastYear (date) {\r\n        var y = date.getFullYear() - 1\r\n        var newDate = y + '-01-01'\r\n        return newDate\r\n      },\r\n      formatDateLastYearEnd (date) {\r\n        var y = date.getFullYear() - 1\r\n        var newDate = y + '-12-31'\r\n        return newDate\r\n      },\r\n      timeChange (change) {\r\n        let edata\r\n        if (change[0] !== '' && change[1] !== undefined) {\r\n          this.para.beginTime = this.formatDate(new Date(change[0]))\r\n          this.para.endTime = this.formatDate(new Date(change[1]))\r\n        } else {\r\n          this.para.beginTime = ''\r\n          this.para.endTime = ''\r\n        }\r\n        getMallOrderForm(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawLineAll('userAll', edata)\r\n        })\r\n        getMallOrder(this.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else if (res.data.code !== 30000) {\r\n            edata = {}\r\n            edata.xAxis = []\r\n            edata.series = [{}]\r\n            edata.series[0].data = []\r\n          }\r\n          this.drawOrder('order', edata)\r\n        })\r\n      }\r\n    },\r\n    created () {\r\n      getMallCart().then((res) => {\r\n        this.expertAll = res.data.content[0].count\r\n        this.areaAll = res.data.content[1].count\r\n        this.plantAll = res.data.content[2].count\r\n        this.questionAll = res.data.content[3].count\r\n        this.serviceAll = res.data.content[4].count\r\n        this.adoptAll = res.data.content[5].count\r\n        this.evaluateAll = res.data.content[6].count\r\n        this.videoAll = res.data.content[7].count\r\n        this.expertNum = res.data.content[0].monthCount\r\n        this.addAreaNum = res.data.content[1].monthCount\r\n        this.plantNum = res.data.content[2].monthCount\r\n        this.questionNum = res.data.content[3].monthCount\r\n        this.serviceNum = res.data.content[4].monthCount\r\n        this.adoptNum = res.data.content[5].monthCount\r\n        this.evaluateNum = res.data.content[6].monthCount\r\n        this.videoNum = res.data.content[7].monthCount\r\n      })\r\n    },\r\n    mounted () {\r\n      let edata\r\n      let vm = this\r\n      // 肥料提供商++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallCompany().then((resp) => {\r\n          vm.drawCompany('plant', resp.data.content[0])\r\n        })\r\n      })\r\n      // 类别饼图++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallFertilizer().then((ress) => {\r\n          vm.drawpie('activity', ress.data.content)\r\n        })\r\n      })\r\n      // 订单排行++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallOrder(vm.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else {\r\n            edata.xAxis = []\r\n            edata.series[0].data = []\r\n          }\r\n          vm.drawOrder('order', edata)\r\n        })\r\n      })\r\n      // 订单走势++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallOrderForm(vm.para).then((res) => {\r\n          if (res.data.code === 30000) {\r\n            edata = FormateGroupData(res.data.content, 'line', false)\r\n          } else {\r\n            edata.xAxis = []\r\n            edata.series[0].data = []\r\n          }\r\n          vm.drawLineAll('userAll', edata)\r\n        })\r\n      })\r\n      // 地图++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallFlyMap().then((resg) => {\r\n          edata = resg.data.content\r\n          edata.data = []\r\n          for (var i = 0; i < edata.length; i++) {\r\n            // edata[i].name = edata[i].name.slice(0, edata[i].name.length - 1)\r\n            for (var j = 0; j < edata[i].length; j++) {\r\n              edata[i][j].name = edata[i][j].name.slice(0, edata[i][j].name.length - 1)\r\n              edata.data.push(edata[i][j])\r\n            }\r\n          }\r\n          vm.drawMapArea('map', edata)\r\n        })\r\n      })\r\n      // 地图++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n      vm.$nextTick(function () {\r\n        getMallAreaMap().then((res) => {\r\n          var edatae = res.data.content\r\n          for (var i = 0; i < edatae.length; i++) {\r\n            edatae[i].name = edatae[i].name.slice(0, edatae[i].name.length - 1)\r\n          }\r\n          this.drawMap('map1', edatae)\r\n        })\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .body {\r\n    padding: 20px;\r\n    text-align: left;\r\n\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/mall/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"body\"},[_c('Row',{attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"订单总交易额\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.expertAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台订单总交易额\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月增长    \"+_vm._s(_vm.expertNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"农业种植解决方案数目\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.areaAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台农业种植解决方案数目\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月新增方案    \"+_vm._s(_vm.addAreaNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"商品总数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.plantAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台商品总数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月上架    \"+_vm._s(_vm.plantNum)+\" 件\")])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"总订单数\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.questionAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台总订单数\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月订单数    \"+_vm._s(_vm.questionNum))])],1)],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"出售肥料总质量\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.serviceAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台出售肥料总质量\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月出售    \"+_vm._s(_vm.serviceNum)+\"次\")])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"自提点数量\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.adoptAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台自提点数量\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月新增自提点    \"+_vm._s(_vm.adoptNum))])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"站长/服务人员数量\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.evaluateAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台站长/服务人员数量\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月增长    \"+_vm._s(_vm.evaluateNum)+\"个\")])],1)],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Card',[_c('p',{staticStyle:{\"height\":\"90px\"},attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"肥料销售区域\")]),_vm._v(\" \"),_c('br'),_c('br'),_c('br'),_vm._v(\" \"),_c('span',{staticStyle:{\"font-size\":\"40px\"}},[_vm._v(_vm._s(_vm.videoAll))])]),_vm._v(\" \"),_c('Tooltip',{attrs:{\"slot\":\"extra\",\"content\":\"平台专家在线视频教学时长\",\"placement\":\"left-end\"},slot:\"extra\"},[_c('Icon',{attrs:{\"type\":\"ios-information-outline\",\"size\":\"24\"}})],1),_vm._v(\" \"),_c('p',[_vm._v(\"本月最增    \"+_vm._s(_vm.videoNum))])],1)],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"#404a59\"}},[(_vm.button === '0')?_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('Col',{attrs:{\"span\":\"24\"}},[_c('div',[_c('div',{staticStyle:{\"height\":\"800px\"},attrs:{\"id\":\"map\"}})])])],1):_vm._e(),_vm._v(\" \"),(_vm.button === '1')?_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('Col',{attrs:{\"span\":\"24\"}},[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticStyle:{\"height\":\"800px\"},attrs:{\"id\":\"map1\"}})])])],1):_vm._e(),_vm._v(\" \"),_c('Row',{attrs:{\"type\":\"flex\",\"justify\":\"start\"}},[_c('Col',{attrs:{\"span\":\"4\"}},[_c('div',{staticStyle:{\"padding-bottom\":\"50px\",\"padding-left\":\"30px\"}},[_c('RadioGroup',{attrs:{\"type\":\"button\"},on:{\"on-change\":_vm.changeMap},model:{value:(_vm.button),callback:function ($$v) {_vm.button=$$v},expression:\"button\"}},[_c('Radio',{attrs:{\"label\":\"0\"}},[_vm._v(\"订单飞线\")]),_vm._v(\" \"),_c('Radio',{attrs:{\"label\":\"1\"}},[_vm._v(\"销售区域\")])],1)],1)])],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"type\":\"flex\",\"justify\":\"center\"}},[_c('Col',{attrs:{\"span\":\"24\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"订单走势图\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"extra\"},slot:\"extra\"},[_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.month}},[_vm._v(\"近一个月\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.quarter}},[_vm._v(\"近三个月\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.todayYear}},[_vm._v(\"今年\")]),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.lastYear}},[_vm._v(\"去年\")]),_vm._v(\" \"),_c('DatePicker',{staticStyle:{\"width\":\"200px\"},attrs:{\"type\":\"daterange\",\"placement\":\"bottom-end\",\"placeholder\":\"选择日期\",\"editable\":false},on:{\"on-change\":_vm.timeChange},model:{value:(_vm.time),callback:function ($$v) {_vm.time=$$v},expression:\"time\"}})],1),_vm._v(\" \"),_c('Row',[_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"userAll\"}})]),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',{staticStyle:{\"height\":\"400px\"},attrs:{\"id\":\"order\"}})])],1)],1)],1)],1),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"gutter\":32}},[_c('Col',{attrs:{\"span\":\"12\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"订单肥料类型占比\")]),_vm._v(\" \"),_c('p'),_c('div',{staticStyle:{\"height\":\"500px\"},attrs:{\"id\":\"activity\"}}),_c('p')])],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"12\"}},[_c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(\"肥料提供商销量分析\")]),_vm._v(\" \"),_c('br')]),_vm._v(\" \"),_c('p'),_c('div',{staticStyle:{\"height\":\"500px\"},attrs:{\"id\":\"plant\"}}),_c('p')])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2b5e9689\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/mall/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2b5e9689\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2b5e9689\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2b5e9689\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/mall/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}